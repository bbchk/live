name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # todo delete in real production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  #back
  NODE_ENV: ${{ vars.NODE_ENV }}
  PORT: ${{ vars.PORT }}
  #front
  NEXT_PUBLIC_BACKEND_URL: ${{ vars.NEXT_PUBLIC_BACKEND_URL }}
  MAINTENANCE_MODE: ${{ vars.MAINTENANCE_MODE }}

jobs:
  back-end-testing-linting-starting:
    uses: bbuukk/live/.github/workflows/back.test_lint_start.yml@main
    with:
      node-version: 20
      working-directory: back
      environment: PROD
    secrets:
      TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}

  front-end-testing-linting-building:
    uses: bbuukk/live/.github/workflows/front.test_lint_build.yml@main
    with:
      node-version: 20
      working-directory: front
      environment: PROD
    secrets:
      GOOGLE_ID: ${{ secrets.GOOGLE_ID }}
      GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}

  back-end-deploy:
    runs-on: ubuntu-latest
    environment: PROD
    needs: [back-end-testing-linting-starting]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: cd back && npm install
      - name: Deploy
        uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_BACK_PROJECT_ID }}
          vercel-args: '--prod'
          vercel-dir: 'back'
  front-end-deploy:
    runs-on: ubuntu-latest
    needs: [front-end-testing-linting-building, back-end-deploy]
    environment: PROD
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # todo test
      - name: Wait for back-end to fully deploy
        run: sleep 60

      - name: Install Dependencies
        run: cd front && npm install
      - name: Deploy
        uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_FRONT_PROJECT_ID }}
          vercel-args: '--prod'
          vercel-dir: 'front'
  lighthouse_audit:
    runs-on: ubuntu-latest
    needs: [front-end-deploy]
    environment: PROD
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Lighthouse
        run: npm install -g lighthouse

      - name: Run Lighthouse
        run: |
          URLS="https://zhyvyisvit.shop/ https://zhyvyisvit.shop/products/dlya-kotiv/page=1 https://zhyvyisvit.shop/product/-napovniuvahch-khvostyk-3--6l-sylikahelmz-dribnyyu-iz-zelenymy-hranulamy/65b2606f213addb487b8ab13/about https://zhyvyisvit.shop/products/search=dlya-kotiv/page=1" # Add all your URLs here
          for URL in $URLS; do
            lighthouse $URL --output json --output-path=./lighthouse-results.json
            # You can also add --quiet --chrome-flags="--headless" if you don't want to see the Chrome output
          done

      - name: Archive Lighthouse results
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-results
          path: ./lighthouse-results.json
